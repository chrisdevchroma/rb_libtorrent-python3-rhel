--- a/src/upnp.cpp
+++ b/src/upnp.cpp
@@ -1286,21 +1286,11 @@
 		update_map(d, mapping, l);
 		return;
 	}
-	else if (s.error_code == 718 || s.error_code == 727)
+	else if (s.error_code == 727)
 	{
-		if (m.external_port != 0)
-		{
-			// conflict in mapping, set port to wildcard
-			// and let the router decide
-			m.external_port = 0;
-			m.action = mapping_t::action_add;
-			++m.failcount;
-			update_map(d, mapping, l);
-			return;
-		}
 		return_error(mapping, s.error_code, l);
 	}
-	else if (s.error_code == 716 || (s.error_code == 501 && m.failcount < 4 && m.external_port == 0))
+	else if (s.error_code == 718 || (s.error_code == 501 && m.failcount < 4))
 	{
 		// some routers return 501 action failed, instead of 716
 		// The external port cannot be wildcarder

--- a/src/session_impl.cpp
+++ b/src/session_impl.cpp
@@ -2429,7 +2429,8 @@
 			m_tcp_mapping[0] = m_natpmp->add_mapping(natpmp::tcp, tcp_port, tcp_port);
 #ifdef TORRENT_USE_OPENSSL
 			if (m_ssl_mapping[0] != -1) m_natpmp->delete_mapping(m_ssl_mapping[0]);
-			m_ssl_mapping[0] = m_natpmp->add_mapping(natpmp::tcp, ssl_port, ssl_port);
+			if (ssl_port > 0) m_ssl_mapping[0] = m_natpmp->add_mapping(natpmp::tcp
+				, ssl_port, ssl_port);
 #endif
 		}
 		if ((mask & 2) && m_upnp.get())
@@ -2438,7 +2439,8 @@
 			m_tcp_mapping[1] = m_upnp->add_mapping(upnp::tcp, tcp_port, tcp_port);
 #ifdef TORRENT_USE_OPENSSL
 			if (m_ssl_mapping[1] != -1) m_upnp->delete_mapping(m_ssl_mapping[1]);
-			m_ssl_mapping[1] = m_upnp->add_mapping(upnp::tcp, ssl_port, ssl_port);
+			if (ssl_port > 0) m_ssl_mapping[1] = m_upnp->add_mapping(upnp::tcp
+				, ssl_port, ssl_port);
 #endif
 		}
 	}

